name: CI for Dockerfile

on:
  push:
    branches:
      - trunck  # Exécuter uniquement sur la branche `trunck`

jobs:
  docker-build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Étape 2: Installer Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Étape 3: Construire l'image Docker
      - name: Build Docker image
        run: docker build -t myapp:latest .

      # Étape 4: Lancer le conteneur en arrière-plan
      - name: Run Docker container
        run: |
          # Démarre le conteneur en arrière-plan
          docker run -d --name myapp-container -p 8080:80 myapp:latest
          
          # Attendre quelques secondes pour s'assurer que le serveur démarre
          sleep 5
          
          # Vérifier si le serveur répond à la requête (nous utilisons curl pour tester si le serveur fonctionne)
          curl --silent --fail http://localhost:8080 || exit 1
          
          # Tester l'API : requête pour récupérer des modèles (en supposant qu'une route existe pour cela)
          curl --silent --fail http://localhost:8080/api/models || exit 1

          # Tester une autre route API pour un modèle spécifique (exemple avec un modèle particulier)
          curl --silent --fail http://localhost:8080/api/models/1 || exit 1
          
          # Vérifier la réponse JSON, si nécessaire, vérifier que certaines données sont présentes
          curl --silent --fail http://localhost:8080/api/models | grep "model_name" || exit 1
          
          # Arrêter le conteneur
          docker stop myapp-container
          docker rm myapp-container

      # Étape 5: Simuler le push vers DockerHub
      - name: Test Docker image (Simuler push vers DockerHub)
        run: |
          echo "Simulating the push of the Docker image to DockerHub"
          echo "Image would be pushed to DockerHub: myapp:latest"

      # Étape 6: Nettoyer (facultatif)
      - name: Clean up
        run: docker system prune -f
